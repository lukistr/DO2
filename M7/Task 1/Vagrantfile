# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
    
    config.ssh.insert_key = false

$docker = <<INSTALL
echo "* Make vagrant user part of docker group ..."
usermod -aG docker vagrant

echo "* Create docker network ..."
docker network create rabbitmq

echo "* Open Prometheus and Grafana ports ..."
sudo ufw allow 9090
sudo ufw allow 3000
sudo ufw reload

echo "* Create config files ..."
mkdir -p rabbitmq/node-{1..3}
cat <<EOF | tee rabbitmq/node-{1..3}/rabbitmq
cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq-1
cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq-2
cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq-3
EOF

echo "* Start the containers nodes ..."
docker run -d --rm --name rabbitmq-1 --hostname rabbitmq-1 --net rabbitmq -p 10001:5672 -p 8081:15672 -v ${PWD}/rabbitmq/node-1/:/config/ -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=ABCDEFFGHIJKLMOP rabbitmq:3.11-management
docker run -d --rm --name rabbitmq-2 --hostname rabbitmq-2 --net rabbitmq -p 10002:5672 -p 8082:15672 -v ${PWD}/rabbitmq/node-2/:/config/ -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=ABCDEFFGHIJKLMOP rabbitmq:3.11-management
docker run -d --rm --name rabbitmq-3 --hostname rabbitmq-3 --net rabbitmq -p 10003:5672 -p 8083:15672 -v ${PWD}/rabbitmq/node-3/:/config/ -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=ABCDEFFGHIJKLMOP rabbitmq:3.11-management

echo "* Enable the federation on nodes ..."
docker container exec rabbitmq-1 rabbitmq-plugins enable rabbitmq_federation
docker container exec rabbitmq-2 rabbitmq-plugins enable rabbitmq_federation
docker container exec rabbitmq-3 rabbitmq-plugins enable rabbitmq_federation

echo "* Waiting to start the container ..."
sleep 30

echo "* Set Rabbit policy ..."
docker container exec rabbitmq-1 rabbitmqctl set_policy ha-all "" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
docker container exec rabbitmq-2 rabbitmqctl set_policy ha-all "" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
docker container exec rabbitmq-3 rabbitmqctl set_policy ha-all "" '{"ha-mode":"all","ha-sync-mode":"automatic"}'

echo "* Start Prometheus and Grafana containers ..."
docker run -d --rm --name prometheus --hostname prometheus --net rabbitmq -p 9090:9090 -v /vagrant/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
docker run -d --rm --name grafana --hostname grafana --net rabbitmq -p 3000:3000 -v /vagrant/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml grafana/grafana


echo '* Install python3 ...'
sudo apt install -y python3 python3-pip
sudo pip3 install pika

echo "* Start one producer and two consumer ..."
python3 -u /vagrant/apps/emit_log_topic.py &> /tmp/app1.log &
python3 -u /vagrant/apps/recv_log_topic.py "*.warn" "*.crit" &> /tmp/app2.log &
python3 -u /vagrant/apps/recv_log_topic.py "ram.*" &> /tmp/app3.log &
INSTALL

    config.vm.define "docker" do |docker|
        docker.vm.box="luki_strike/Ubuntu"
        docker.vm.hostname = "docker.do2.lab"
        docker.vm.synced_folder ".", "/vagrant"
        docker.vm.provider :virtualbox do |v|
            v.memory = 2048
            v.cpus = 1
        end
        docker.vm.network "private_network", ip: "192.168.100.201"
        docker.vm.provision "docker" do |doc|
        end
        docker.vm.provision "shell", inline: $docker, privileged: false
    end
end